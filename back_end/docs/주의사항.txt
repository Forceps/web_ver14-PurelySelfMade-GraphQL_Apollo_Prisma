1. MySQL에서 foreign key(FK)로 테이블 간에 관계설정을 할 때 기존에 테이블에 있던 레코드들이 존재하는데 그 레코드들에 FK를 설정하려는 column에 빈 값이 있어서 오류가 나는 경우가 있다. 이 때는 모든 레코드를 지우거나, FK열의 빈칸을 모두 없애야 한다.

2. multer로 Client에서 업로드한 사진을 저장할 때 `./asset/uploadedFiles`디렉토리가 미리 존재하고 있어야 한다. 그러니까 이 디렉토리를 삭제하면 안된다. 존재하지 않는 경우 자동으로 생성되지는 않는 듯 하다. 

3. GraphQL Playground 에서 요청 및 응답 실험을 할 때 가상으로 로그인 된 상태를 인증하려면 HTTP Headers에 다음을 입력하자.
  {
    "Authorization": "Bearer <JWT>"
  }
여기서 <JWT>는 Jwt토큰이다. 브라우저의 개발자도구의 Application에서 확인할 수 있다.

4. 데이터베이스의 테이블 구조가 변경되면서 Prisma Client도 같이 변경되면 GraphQL의 데이터 모델링도(여기서는 models.graphql파일)도 같이 수정시켜줘야 한다는 점을 잊지 말아야 한다.

5. windows에서 npm 패키지를 global로 설치하려고 할 때 yarn으로 yarn global add를 사용하지 말고 가급적 npm install -g를 이용하자. cli를 이용할 때 환경변수를 설정해줘야 하는데 yarn은 어딨는지 모르겠다.

6. 이 백엔드를 처음 설치한 상태라면 prisma cli 작업을 하는 것을 잊지말자.

7. json 형식으로 데이터를 불러왔다거나 혹은 직접 배열안의 객체 구조를 만들어 데이터화 하여 사용할 때 특정 값을 가진 객체를 찾아서 그 객체가 가진 다른 값을 가져올 때 사용한다.

  var people = [
    { "name": "bob", "dinner": "pizza" },
    { "name": "john", "dinner": "sushi" },
    { "name": "larry", "dinner": "hummus" }
  ];

이런 식으로 배열안에 객체가 있다면 여기서 dinner가 sushi 인 사람의 이름을 가져올 때는 아래와 같다.

  let men = people.filter((person) => person.dinner === "sushi");
  console.log(men[0].name);

이렇게 하면 john이 나온다.

index 번호가 알고 싶을 땐 filter함수 대신 findIndex함수를 쓴다.
참고: 교체나 수정시 splice함수를 쓴다.


8. resolver typescript파일을 만들 때 이름에 .r.을 빼먹어서 오류가 나는 경우가 잦으니 주의해야 한다.

9. mysql에서 FULLTEXT SEARCH의 parser로 ngram을 지정할 때, 처음 지정할 때는 2개 이상의 열을 검색하게끔 지정하면 적용이 아예 안되는 문제가 있다(버그로 의심된다). 이를 우회하려면 우선 하나의 열에 대해서만 ngram을 지정하고 적용한 다음에 다른 것들을 추가하고 다시 적용 하는 식으로 할 수 있다.

